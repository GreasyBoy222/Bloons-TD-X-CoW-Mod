<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite278</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.challenge = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stack1amount = 0
stack1layer = 0
stack1delay = 0
stack2amount = 0
stack2layer = 0
stack2delay = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cashflow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.01</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.freeplaycycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afterwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cashwavereward</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.bpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1.15 + (global.strongerbloons / 4)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>global.bpower</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.bspeed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>global.bspeed - 0.1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>61</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.waveloop</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wavespeed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1 * (1 + global.wavesqueeze)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack9amount &gt; 0
if stack9layer &lt; 9
{
if stack9type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 18
{
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack9type = 1
   tattered = 1
   if other.stack9type = 3
   regrow = 1
   if other.stack9type = 4
   camo = 1
   if other.stack9type = 5
   lead = 1
   if other.stack9type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack9type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack9shield;
   armour = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 48
{
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack9type = 1
   tattered = 1
   if other.stack9type = 3
   regrow = 1
   if other.stack9type = 4
   camo = 1
   if other.stack9type = 5
   lead = 1
   if other.stack9type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack9type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack9shield;
   armour = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 93
{
if stack9type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack9shield;
   shell = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 68.5
{
if stack9type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack9shield;
   shell = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 348
{
if stack9type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack9shield;
   shell = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 1248
{
if stack9type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack9shield;
   shell = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 5248
{
if stack9type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack9shield;
   shell = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 351
{
if stack9type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack9shield;
   shell = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 318
{
if stack9type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}

if stack9amount &gt; 0
if stack9layer = 593
{
if stack9type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack9shield;
   shell = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
if stack9type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack9shield;
   shield = other.stack9shield;
   bloonmaxlayer = other.stack9layer;
   bloonlayer = other.stack9layer;
   }
stack9amount -= 1
alarm[9] = stack9delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack8amount &gt; 0
if stack8layer &lt; 9
{
if stack8type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 18
{
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack8type = 1
   tattered = 1
   if other.stack8type = 3
   regrow = 1
   if other.stack8type = 4
   camo = 1
   if other.stack8type = 5
   lead = 1
   if other.stack8type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack8type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack8shield;
   armour = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 48
{
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack8type = 1
   tattered = 1
   if other.stack8type = 3
   regrow = 1
   if other.stack8type = 4
   camo = 1
   if other.stack8type = 5
   lead = 1
   if other.stack8type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack8type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack8shield;
   armour = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 93
{
if stack8type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack8shield;
   shell = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 68.5
{
if stack8type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack8shield;
   shell = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 348
{
if stack8type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack8shield;
   shell = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 1248
{
if stack8type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack8shield;
   shell = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 5248
{
if stack8type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack8shield;
   shell = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 351
{
if stack8type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack8shield;
   shell = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 318
{
if stack8type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}

if stack8amount &gt; 0
if stack8layer = 593
{
if stack8type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack8shield;
   shell = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
if stack8type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack8shield;
   shield = other.stack8shield;
   bloonmaxlayer = other.stack8layer;
   bloonlayer = other.stack8layer;
   }
stack8amount -= 1
alarm[8] = stack8delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack7amount &gt; 0
if stack7layer &lt; 9
{
if stack7type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 18
{
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack7type = 1
   tattered = 1
   if other.stack7type = 3
   regrow = 1
   if other.stack7type = 4
   camo = 1
   if other.stack7type = 5
   lead = 1
   if other.stack7type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack7type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack7shield;
   armour = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 48
{
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack7type = 1
   tattered = 1
   if other.stack7type = 3
   regrow = 1
   if other.stack7type = 4
   camo = 1
   if other.stack7type = 5
   lead = 1
   if other.stack7type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack7type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack7shield;
   armour = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 93
{
if stack7type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack7shield;
   shell = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 68.5
{
if stack7type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack7shield;
   shell = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 348
{
if stack7type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack7shield;
   shell = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 1248
{
if stack7type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack7shield;
   shell = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 5248
{
if stack7type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack7shield;
   shell = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 351
{
if stack7type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack7shield;
   shell = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 318
{
if stack7type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}

if stack7amount &gt; 0
if stack7layer = 593
{
if stack7type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack7shield;
   shell = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
if stack7type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack7shield;
   shield = other.stack7shield;
   bloonmaxlayer = other.stack7layer;
   bloonlayer = other.stack7layer;
   }
stack7amount -= 1
alarm[7] = stack7delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack6amount &gt; 0
if stack6layer &lt; 9
{
if stack6type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 18
{
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack6type = 1
   tattered = 1
   if other.stack6type = 3
   regrow = 1
   if other.stack6type = 4
   camo = 1
   if other.stack6type = 5
   lead = 1
   if other.stack6type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack6type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack6shield;
   armour = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 48
{
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack6type = 1
   tattered = 1
   if other.stack6type = 3
   regrow = 1
   if other.stack6type = 4
   camo = 1
   if other.stack6type = 5
   lead = 1
   if other.stack6type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack6type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack6shield;
   armour = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 93
{
if stack6type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack6shield;
   shell = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 68.5
{
if stack6type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack6shield;
   shell = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 348
{
if stack6type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack6shield;
   shell = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 1248
{
if stack6type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack6shield;
   shell = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 5248
{
if stack6type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack6shield;
   shell = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 351
{
if stack6type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack6shield;
   shell = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 318
{
if stack6type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}

if stack6amount &gt; 0
if stack6layer = 593
{
if stack6type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack6shield;
   shell = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
if stack6type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack6shield;
   shield = other.stack6shield;
   bloonmaxlayer = other.stack6layer;
   bloonlayer = other.stack6layer;
   }
stack6amount -= 1
alarm[6] = stack6delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack5amount &gt; 0
if stack5layer &lt; 9
{
if stack5type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 18
{
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack5type = 1
   tattered = 1
   if other.stack5type = 3
   regrow = 1
   if other.stack5type = 4
   camo = 1
   if other.stack5type = 5
   lead = 1
   if other.stack5type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack5type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack5shield;
   armour = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 48
{
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack5type = 1
   tattered = 1
   if other.stack5type = 3
   regrow = 1
   if other.stack5type = 4
   camo = 1
   if other.stack5type = 5
   lead = 1
   if other.stack5type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack5type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack5shield;
   armour = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 93
{
if stack5type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack5shield;
   shell = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 68.5
{
if stack5type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack5shield;
   shell = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 348
{
if stack5type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack5shield;
   shell = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 1248
{
if stack5type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack5shield;
   shell = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 5248
{
if stack5type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack5shield;
   shell = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 351
{
if stack5type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack5shield;
   shell = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 318
{
if stack5type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}

if stack5amount &gt; 0
if stack5layer = 593
{
if stack5type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack5shield;
   shell = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
if stack5type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack5shield;
   shield = other.stack5shield;
   bloonmaxlayer = other.stack5layer;
   bloonlayer = other.stack5layer;
   }
stack5amount -= 1
alarm[5] = stack5delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack4amount &gt; 0
if stack4layer &lt; 9
{
if stack4type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 18
{
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack4type = 1
   tattered = 1
   if other.stack4type = 3
   regrow = 1
   if other.stack4type = 4
   camo = 1
   if other.stack4type = 5
   lead = 1
   if other.stack4type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack4type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack4shield;
   armour = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 48
{
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack4type = 1
   tattered = 1
   if other.stack4type = 3
   regrow = 1
   if other.stack4type = 4
   camo = 1
   if other.stack4type = 5
   lead = 1
   if other.stack4type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack4type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack4shield;
   armour = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 93
{
if stack4type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack4shield;
   shell = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 68.5
{
if stack4type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack4shield;
   shell = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 348
{
if stack4type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack4shield;
   shell = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 1248
{
if stack4type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack4shield;
   shell = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 5248
{
if stack4type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack4shield;
   shell = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 351
{
if stack4type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack4shield;
   shell = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 318
{
if stack4type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}

if stack4amount &gt; 0
if stack4layer = 593
{
if stack4type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack4shield;
   shell = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
if stack4type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack4shield;
   shield = other.stack4shield;
   bloonmaxlayer = other.stack4layer;
   bloonlayer = other.stack4layer;
   }
stack4amount -= 1
alarm[4] = stack4delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack3amount &gt; 0
if stack3layer &lt; 9
{
if stack3type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 18
{
if stack3type != 2 and stack3type != 12 and stack3type != 6
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack3type = 1
   tattered = 1
   if other.stack3type = 3
   regrow = 1
   if other.stack3type = 4
   camo = 1
   if other.stack3type = 5
   lead = 1
   if other.stack3type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack3type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack3shield;
   armour = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 48
{
if stack3type != 2 and stack3type != 12 and stack3type != 6
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack3type = 1
   tattered = 1
   if other.stack3type = 3
   regrow = 1
   if other.stack3type = 4
   camo = 1
   if other.stack3type = 5
   lead = 1
   if other.stack3type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack3type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack3shield;
   armour = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 93
{
if stack3type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 68.5
{
if stack3type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 348
{
if stack3type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
   if stack3type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 1248
{
if stack3type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
   if stack3type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 5248
{
if stack3type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
   if stack3type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 351
{
if stack3type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 318
{
if stack3type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 593
{
if stack3type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
if stack3type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack3shield;
   shield = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 10068.5
{
with instance_create(x, y, Prismatic_HTA_Branch)
   {
   maxarmour = other.stack3shield;
   armour = other.stack3shield;
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 2593
{
with instance_create(x, y, Mega_BRC_Branch)
   {
   maxarmour = other.stack3shield;
   armour = other.stack3shield;
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 248
{
with instance_create(x, y, Rocket_Blimp_Branch)
   {
   maxarmour = other.stack3shield;
   armour = other.stack3shield;
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 918
{
with instance_create(x, y, Storm_LPZ_Branch)
   {
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   maxsheild = other.stack2shield;
   sheild = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 3318
{
with instance_create(x, y, Deadly_DDT_Branch)
   {
   maxarmour = other.stack3shield;
   armour = other.stack3shield;
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}

if stack3amount &gt; 0
if stack3layer = 17248
{
with instance_create(x, y, The_Party_Blimp_Branch)
   {
   maxarmour = other.stack3shield;
   armour = other.stack3shield;
   maxshell = other.stack3shield;
   shell = other.stack3shield;
   bloonmaxlayer = other.stack3layer;
   bloonlayer = other.stack3layer;
   }
stack3amount -= 1
alarm[3] = stack3delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack2amount &gt; 0
if stack2layer &lt; 9
{
if stack2type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 18
{
if stack2type != 2 and stack2type != 12 and stack2type != 6
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack2type = 1
   tattered = 1
   if other.stack2type = 3
   regrow = 1
   if other.stack2type = 4
   camo = 1
   if other.stack2type = 5
   lead = 1
   if other.stack2type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack2type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 48
{
if stack2type != 2 and stack2type != 12 and stack2type != 6
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack2type = 1
   tattered = 1
   if other.stack2type = 3
   regrow = 1
   if other.stack2type = 4
   camo = 1
   if other.stack2type = 5
   lead = 1
   if other.stack2type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack2type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 93
{
if stack2type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 68.5
{
if stack2type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 348
{
if stack2type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
   if stack2type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 1248
{
if stack2type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
   if stack2type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 5248
{
if stack2type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
   if stack2type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 351
{
if stack2type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 318
{
if stack2type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 593
{
if stack2type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
if stack2type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack2shield;
   shield = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 10068.5
{
with instance_create(x, y, Prismatic_HTA_Branch)
   {
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
   stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 2593
{
with instance_create(x, y, Mega_BRC_Branch)
   {
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 248
{
with instance_create(x, y, Rocket_Blimp_Branch)
   {
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 918
{
with instance_create(x, y, Storm_LPZ_Branch)
   {
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   maxsheild = other.stack2shield;
   sheild = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 3318
{
with instance_create(x, y, Deadly_DDT_Branch)
   {
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}

if stack2amount &gt; 0
if stack2layer = 17248
{
with instance_create(x, y, The_Party_Blimp_Branch)
   {
   maxarmour = other.stack2shield;
   armour = other.stack2shield;
   maxshell = other.stack2shield;
   shell = other.stack2shield;
   bloonmaxlayer = other.stack2layer;
   bloonlayer = other.stack2layer;
   }
stack2amount -= 1
alarm[2] = stack2delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stack1amount &gt; 0
if stack1layer &lt; 9
{
if stack1type = 0
with instance_create(x, y, Normal_Bloon_Branch)
   {
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 1
with instance_create(x, y, Normal_Bloon_Branch)
   {
   tattered = 1;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 3
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 4
with instance_create(x, y, Camo_Bloon_Branch)
   {
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 5
with instance_create(x, y, Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 7
with instance_create(x, y, Camo_Lead_Bloon_Branch)
   {
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 8
with instance_create(x, y, Regrow_Bloon_Branch)
   {
   tattered = 1
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 18
{
if stack1type != 2 and stack1type != 12 and stack1type != 6
with instance_create(x, y, Ceramic_Bloon_Branch)
   {
   if other.stack1type = 1
   tattered = 1
   if other.stack1type = 3
   regrow = 1
   if other.stack1type = 4
   camo = 1
   if other.stack1type = 5
   lead = 1
   if other.stack1type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack1type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack1shield;
   armour = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 48
{
if stack1type != 2 and stack1type != 12 and stack1type != 6
with instance_create(x, y, Brick_Bloon_Branch)
   {
   if other.stack1type = 1
   tattered = 1
   if other.stack1type = 3
   regrow = 1
   if other.stack1type = 4
   camo = 1
   if other.stack1type = 5
   lead = 1
   if other.stack1type = 7
   {
   camo = 1
   lead = 1
   }
   if other.stack1type = 8
   {
   regrow = 1
   tattered = 1
   }
   maxarmour = other.stack1shield;
   armour = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 6
with instance_create(x, y, Static_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 93
{
if stack1type = 0
with instance_create(x, y, Mini_Moab_Branch)
   {
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 68.5
{
if stack1type = 0
with instance_create(x, y, HTA_Branch)
   {
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 348
{
if stack1type = 0
with instance_create(x, y, Moab_Branch)
   {
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
   if stack1type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 1248
{
if stack1type = 0
with instance_create(x, y, BFB_Branch)
   {
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
   if stack1type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 5248
{
if stack1type = 0
with instance_create(x, y, ZOMG_Branch)
   {
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
   if stack1type = 12
with instance_create(x, y, Super_Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 351
{
if stack1type = 0
with instance_create(x, y, DDT_Branch)
   {
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 318
{
if stack1type = 0
with instance_create(x, y, LPZ_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   maxshell = (300 * global.bpower);
   shell = (300 * global.bpower);
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 593
{
if stack1type = 0
with instance_create(x, y, BRC_Branch)
   {
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
if stack1type = 2
with instance_create(x, y, Shielded_Bloon_Branch)
   {
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 10068.5
{
with instance_create(x, y, Prismatic_HTA_Branch)
   {
   maxarmour = other.stack1shield;
   armour = other.stack1shield;
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 2593
{
with instance_create(x, y, Mega_BRC_Branch)
   {
   maxarmour = other.stack1shield;
   armour = other.stack1shield;
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 248
{
with instance_create(x, y, Rocket_Blimp_Branch)
   {
   maxarmour = other.stack1shield;
   armour = other.stack1shield;
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 918
{
with instance_create(x, y, Storm_LPZ_Branch)
   {
   maxarmour = other.stack1shield;
   armour = other.stack1shield;
   maxshield = other.stack1shield;
   shield = other.stack1shield;
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 3318
{
with instance_create(x, y, Deadly_DDT_Branch)
   {
   maxarmour = other.stack1shield;
   armour = other.stack1shield;
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}

if stack1amount &gt; 0
if stack1layer = 17248
{
with instance_create(x, y, The_Party_Blimp_Branch)
   {
   maxarmour = other.stack1shield;
   armour = other.stack1shield;
   maxshell = other.stack1shield;
   shell = other.stack1shield;
   bloonmaxlayer = other.stack1layer;
   bloonlayer = other.stack1layer;
   }
stack1amount -= 1
alarm[1] = stack1delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.wave = 91 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 92 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 93 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 94 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 95 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 96 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 97 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 98 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 99 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)
if global.wave = 100 + 10 * global.freeplaycycle
global.cashwavereward = round(global.waveloop * 200 * 238) + round(global.waveloop * 60 * 491)

global.wavenow = 0
global.wave += 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.trackselect = 1
{
if global.wave - 60 &gt; global.track1besthardwave
global.track1besthardwave = global.wave - 60
}

if global.trackselect = 2
{
if global.wave - 60 &gt; global.track2besthardwave
global.track2besthardwave = global.wave - 60
}
if global.trackselect = 3
{
if global.wave - 60 &gt; global.track3besthardwave
global.track3besthardwave = global.wave - 60
}
if global.trackselect = 4
{
if global.wave - 60 &gt; global.track4besthardwave
global.track4besthardwave = global.wave - 60
}
if global.trackselect = 5
{
if global.wave - 60 &gt; global.track5besthardwave
global.track5besthardwave = global.wave - 60
}
if global.trackselect = 6
{
if global.wave - 60 &gt; global.track6besthardwave
global.track6besthardwave = global.wave - 60
}
if global.trackselect = 7
{
if global.wave - 60 &gt; global.track7besthardwave
global.track7besthardwave = global.wave - 60
}
if global.trackselect = 8
{
if global.wave - 60 &gt; global.track8besthardwave
global.track8besthardwave = global.wave - 60
}
if global.trackselect = 9
{
if global.wave - 60 &gt; global.track9besthardwave
global.track9besthardwave = global.wave - 60
}
if global.trackselect = 10
{
if global.wave - 60 &gt; global.track10besthardwave
global.track10besthardwave = global.wave - 60
}
if global.trackselect = 11
{
if global.wave - 60 &gt; global.track11besthardwave
global.track11besthardwave = global.wave - 60
}
if global.trackselect = 12
{
if global.wave - 60 &gt; global.track12besthardwave
global.track12besthardwave = global.wave - 60
}
if global.trackselect = 13
{
if global.wave - 60 &gt; global.track13besthardwave
global.track13besthardwave = global.wave - 60
}
if global.trackselect = 14
{
if global.wave - 60 &gt; global.track14besthardwave
global.track14besthardwave = global.wave - 60
}
if global.trackselect = 15
{
if global.wave - 60 &gt; global.track15besthardwave
global.track15besthardwave = global.wave - 60
}
if global.trackselect = 16
{
if global.wave - 60 &gt; global.track16besthardwave
global.track16besthardwave = global.wave - 60
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>afterwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>sprite278</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Monkey</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Tree</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bananas = maxbananas
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthy_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hbananas = maxhbananas
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthier_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hbananas = maxhbananas
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Agent</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>level += 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (Agitated_Squirrel)
{
anger = 0
}
with (Buff_Squirrel)
{
anger = 0
}
with (Acorn_Fury)
{
anger = 0
}
with (Bloonbury_Bush)
{
PP += 8;
level += 1;
}
with (Wild_Bush)
{
PP += 12;
level += 1;
}
with (Thorn_Bush)
{
PP += 12;
level += 1;
}
with (Garden_of_Thorns)
{
PP += 12;
level += 1;
}
with (Monkey_Nurse)
{
instance_create(x,y,Health_Heart)
}
with (Monkey_Medic)
{
repeat(2)
instance_create(x,y,Health_Heart)
}
with (Holy_Monkey)
{
repeat(2)
instance_create(x,y,Divine_Heart)
}
with (Divine_Monkey)
{
repeat(3)
instance_create(x,y,Divine_Heart)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (Wave_Panel)
{
if Waveup = global.wave - 1
instance_destroy()
speed = 41
direction = 90
friction = 10
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.money</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>round((((global.cashwavereward) * (global.cashflow))) * (1 + global.cashinflate * 0.1))</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.money</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>(global.wealthiness * 20) - 1 + (1 * global.wave)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.cashinflate &gt; 0
{
global.money = round(global.money * (1 + 0.03 * global.cashinflate))
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afterwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.autostart</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afterwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 60;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 90;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>Going</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Factory</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(35)
{
if bananas &gt; 0
{
instance_create(x,y,Super_Banana)
bananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Tree</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if bananas &gt; 0
{
instance_create(x,y,Banana)
bananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthy_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if hbananas &gt; 0
{
instance_create(x,y,Healthy_Banana)
hbananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthier_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if hbananas &gt; 0
{
instance_create(x,y,Healthier_Banana)
hbananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stack1type = 0
stack2type = 0
stack3type = 0
stack4type = 0
stack5type = 0
stack6type = 0
stack7type = 0
stack8type = 0
stack9type = 0
stack10type = 0
stack11type = 0

if global.wave = 61 + 10 * global.freeplaycycle
{
bpower += 0.2
global.bpower += 0.2
if global.bspeed &lt; 2.25
global.bspeed += 0.1

stack1layer = 48
stack1type = 12
stack1shield = round(110 * bpower)
stack1amount = round(120 * global.waveloop)
stack1delay = 12 / global.wavespeed
alarm[1] = 1
stack2layer = 5248
stack2type = 2
stack2shield = round(5255 * bpower)
stack2amount = round(4 * global.waveloop)
stack2delay = 480 / global.wavespeed
alarm[2] = 300
alarm[0] = alarm[2] + 300 + round(stack2amount * stack2delay)
}

if global.wave = 62 + 10 * global.freeplaycycle
{
stack1layer = 351
stack1shield = round(303 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 70 / global.wavespeed
alarm[1] = 1
stack10layer = 10
stack10type = 2
stack10shield = 90
stack10amount = round(100 * global.waveloop)
stack10delay = 20 / global.wavespeed
alarm[10] = 11 / global.wavespeed
stack11layer = 10
stack11type = 3
stack11shield = 120
stack11amount = round(100 * global.waveloop)
stack11delay = 20 / global.wavespeed
alarm[11] = 21 / global.wavespeed
alarm[0] = alarm[1] + 60 + round(stack1amount * stack1delay)
}

if global.wave = 63 + 10 * global.freeplaycycle
{
stack1layer = 18
stack1type = 6
stack1shield = round(50 * bpower)
stack1amount = round(120 * global.waveloop)
stack1delay = 12 / global.wavespeed
alarm[1] = 1
stack2layer = 2593
stack2shield = round(2000 * bpower)
stack2amount = round(4 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 60
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 64 + 10 * global.freeplaycycle
{
stack1layer = 93
stack1type = 12
stack1shield = round(200 * bpower)
stack1amount = round(75 * global.waveloop)
stack1delay = 15 / global.wavespeed
alarm[1] = 1
stack2layer = 1248
stack2type = 2
stack2shield = round(2510 * bpower)
stack2amount = round(10 * global.waveloop)
stack2delay = 100 / global.wavespeed
alarm[2] = 60 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 65 + 10 * global.freeplaycycle
{
stack1layer = 5248
stack1shield = round(4000 * bpower)
stack1amount = round(5 * global.waveloop)
stack1delay = 250 / global.wavespeed
alarm[1] = 1
stack2layer = 3318
stack2shield = round(3000 * bpower)
stack2amount = round(5 * global.waveloop)
stack2delay = 250 / global.wavespeed
alarm[2] = 250 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 66 + 10 * global.freeplaycycle
{
stack1layer = 248
stack1shield = round(300 * bpower)
stack1amount = round(40 * global.waveloop)
stack1delay = 25 / global.wavespeed
alarm[1] = 1
stack2layer = 17248
stack2shield = round(12000 * bpower)
stack2amount = round(1 * global.waveloop)
stack2delay = 800 / global.wavespeed
alarm[2] = 200 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 67 + 10 * global.freeplaycycle
{
stack1layer = 10068.5
stack1shield = round(10000 * bpower)
stack1amount = round(40 * global.waveloop)
stack1delay = 30 / global.wavespeed
alarm[1] = 1
stack2layer = 918
stack2shield = round(3500 * bpower)
stack2amount = round(1 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 300 / global.wavespeed
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 68 + 10 * global.freeplaycycle
{
stack1layer = 348
stack1type = 12
stack1shield = round(710 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 45 / global.wavespeed
alarm[1] = 1
stack2layer = 5248
stack2type = 12
stack2shield = round(10510 * bpower)
stack2amount = round(2 * global.waveloop)
stack2delay = 400 / global.wavespeed
alarm[2] = 200 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 69 + 10 * global.freeplaycycle
{
stack1layer = 10068.5
stack1shield = round(10000 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 70 / global.wavespeed
alarm[1] = 1
stack2layer = 2593
stack2shield = round(2000 * bpower)
stack2amount = round(6 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 300 / global.wavespeed
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 70 + 10 * global.freeplaycycle
{
stack1layer = 918
stack1shield = round(3500 * bpower)
stack1amount = round(3 * global.waveloop)
stack1delay = 1000 / global.wavespeed
alarm[1] = 1
stack2layer = 17248
stack2shield = round(12000 * bpower)
stack2amount = round(2 * global.waveloop)
stack2delay = 1000 / global.wavespeed
alarm[2] = 500 / global.wavespeed
alarm[0] = alarm[1] + 100 + round(stack1amount * stack1delay)
global.freeplaycycle += 1
if global.waveloop &lt; 4
{
global.waveloop += 0.4
}
if global.wavespeed &lt; (4 * (1 + global.wavesqueeze))
{
global.wavespeed += 0.4 * (1 + global.wavesqueeze)
}
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.autostart</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afterwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 60;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 90;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>Going</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Factory</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(35)
{
if bananas &gt; 0
{
instance_create(x,y,Super_Banana)
bananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Tree</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if bananas &gt; 0
{
instance_create(x,y,Banana)
bananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthy_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if hbananas &gt; 0
{
instance_create(x,y,Healthy_Banana)
hbananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthier_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if hbananas &gt; 0
{
instance_create(x,y,Healthier_Banana)
hbananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stack1type = 0
stack2type = 0
stack3type = 0
stack4type = 0
stack5type = 0
stack6type = 0
stack7type = 0
stack8type = 0
stack9type = 0
stack10type = 0
stack11type = 0

if global.wave = 61 + 10 * global.freeplaycycle
{
bpower += 0.2
global.bpower += 0.2
if global.bspeed &lt; 2.25
global.bspeed += 0.1

stack1layer = 48
stack1type = 12
stack1shield = round(110 * bpower)
stack1amount = round(120 * global.waveloop)
stack1delay = 12 / global.wavespeed
alarm[1] = 1
stack2layer = 5248
stack2type = 2
stack2shield = round(5255 * bpower)
stack2amount = round(4 * global.waveloop)
stack2delay = 480 / global.wavespeed
alarm[2] = 300
alarm[0] = alarm[2] + 300 + round(stack2amount * stack2delay)
}

if global.wave = 62 + 10 * global.freeplaycycle
{
stack1layer = 351
stack1shield = round(303 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 70 / global.wavespeed
alarm[1] = 1
stack10layer = 10
stack10type = 2
stack10shield = 90
stack10amount = round(100 * global.waveloop)
stack10delay = 20 / global.wavespeed
alarm[10] = 11 / global.wavespeed
stack11layer = 10
stack11type = 3
stack11shield = 120
stack11amount = round(100 * global.waveloop)
stack11delay = 20 / global.wavespeed
alarm[11] = 21 / global.wavespeed
alarm[0] = alarm[1] + 60 + round(stack1amount * stack1delay)
}

if global.wave = 63 + 10 * global.freeplaycycle
{
stack1layer = 18
stack1type = 6
stack1shield = round(50 * bpower)
stack1amount = round(120 * global.waveloop)
stack1delay = 12 / global.wavespeed
alarm[1] = 1
stack2layer = 2593
stack2shield = round(2000 * bpower)
stack2amount = round(4 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 60
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 64 + 10 * global.freeplaycycle
{
stack1layer = 93
stack1type = 12
stack1shield = round(200 * bpower)
stack1amount = round(75 * global.waveloop)
stack1delay = 15 / global.wavespeed
alarm[1] = 1
stack2layer = 1248
stack2type = 12
stack2shield = round(2510 * bpower)
stack2amount = round(10 * global.waveloop)
stack2delay = 100 / global.wavespeed
alarm[2] = 60 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 65 + 10 * global.freeplaycycle
{
stack1layer = 5248
stack1shield = round(4000 * bpower)
stack1amount = round(5 * global.waveloop)
stack1delay = 250 / global.wavespeed
alarm[1] = 1
stack2layer = 3318
stack2shield = round(3000 * bpower)
stack2amount = round(5 * global.waveloop)
stack2delay = 250 / global.wavespeed
alarm[2] = 250 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 66 + 10 * global.freeplaycycle
{
stack1layer = 248
stack1shield = round(300 * bpower)
stack1amount = round(40 * global.waveloop)
stack1delay = 25 / global.wavespeed
alarm[1] = 1
stack2layer = 17248
stack2shield = round(12000 * bpower)
stack2amount = round(1 * global.waveloop)
stack2delay = 800 / global.wavespeed
alarm[2] = 200 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 67 + 10 * global.freeplaycycle
{
stack1layer = 10068.5
stack1shield = round(10000 * bpower)
stack1amount = round(40 * global.waveloop)
stack1delay = 30 / global.wavespeed
alarm[1] = 1
stack2layer = 918
stack2shield = round(3500 * bpower)
stack2amount = round(1 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 300 / global.wavespeed
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 68 + 10 * global.freeplaycycle
{
stack1layer = 348
stack1type = 12
stack1shield = round(710 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 45 / global.wavespeed
alarm[1] = 1
stack2layer = 5248
stack2type = 12
stack2shield = round(10510 * bpower)
stack2amount = round(2 * global.waveloop)
stack2delay = 400 / global.wavespeed
alarm[2] = 200 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 69 + 10 * global.freeplaycycle
{
stack1layer = 10068.5
stack1shield = round(10000 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 70 / global.wavespeed
alarm[1] = 1
stack2layer = 2593
stack2shield = round(2000 * bpower)
stack2amount = round(6 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 300 / global.wavespeed
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 70 + 10 * global.freeplaycycle
{
stack1layer = 918
stack1shield = round(3500 * bpower)
stack1amount = round(3 * global.waveloop)
stack1delay = 1000 / global.wavespeed
alarm[1] = 1
stack2layer = 17248
stack2shield = round(12000 * bpower)
stack2amount = round(2 * global.waveloop)
stack2delay = 1000 / global.wavespeed
alarm[2] = 500 / global.wavespeed
alarm[0] = alarm[1] + 100 + round(stack1amount * stack1delay)
global.freeplaycycle += 1
if global.waveloop &lt; 4
{
global.waveloop += 0.4
}
if global.wavespeed &lt; (4 * (1 + global.wavesqueeze))
{
global.wavespeed += 0.4 * (1 + global.wavesqueeze)
}
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afterwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 60;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 90;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>Going</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Factory</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(35)
{
if bananas &gt; 0
{
instance_create(x,y,Super_Banana)
bananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Tree</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if bananas &gt; 0
{
instance_create(x,y,Banana)
bananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthy_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if hbananas &gt; 0
{
instance_create(x,y,Healthy_Banana)
hbananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthier_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if hbananas &gt; 0
{
instance_create(x,y,Healthier_Banana)
hbananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stack1type = 0
stack2type = 0
stack3type = 0
stack4type = 0
stack5type = 0
stack6type = 0
stack7type = 0
stack8type = 0
stack9type = 0
stack10type = 0
stack11type = 0

if global.wave = 61 + 10 * global.freeplaycycle
{
bpower += 0.2
global.bpower += 0.2
if global.bspeed &lt; 2.25
global.bspeed += 0.1

stack1layer = 48
stack1type = 12
stack1shield = round(110 * bpower)
stack1amount = round(120 * global.waveloop)
stack1delay = 12 / global.wavespeed
alarm[1] = 1
stack2layer = 5248
stack2type = 2
stack2shield = round(5255 * bpower)
stack2amount = round(4 * global.waveloop)
stack2delay = 480 / global.wavespeed
alarm[2] = 300
alarm[0] = alarm[2] + 300 + round(stack2amount * stack2delay)
}

if global.wave = 62 + 10 * global.freeplaycycle
{
stack1layer = 351
stack1shield = round(303 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 70 / global.wavespeed
alarm[1] = 1
stack10layer = 10
stack10type = 2
stack10shield = 90
stack10amount = round(100 * global.waveloop)
stack10delay = 20 / global.wavespeed
alarm[10] = 11 / global.wavespeed
stack11layer = 10
stack11type = 3
stack11shield = 120
stack11amount = round(100 * global.waveloop)
stack11delay = 20 / global.wavespeed
alarm[11] = 21 / global.wavespeed
alarm[0] = alarm[1] + 60 + round(stack1amount * stack1delay)
}

if global.wave = 63 + 10 * global.freeplaycycle
{
stack1layer = 18
stack1type = 6
stack1shield = round(50 * bpower)
stack1amount = round(120 * global.waveloop)
stack1delay = 12 / global.wavespeed
alarm[1] = 1
stack2layer = 2593
stack2shield = round(2000 * bpower)
stack2amount = round(4 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 60
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 64 + 10 * global.freeplaycycle
{
stack1layer = 93
stack1type = 12
stack1shield = round(200 * bpower)
stack1amount = round(75 * global.waveloop)
stack1delay = 15 / global.wavespeed
alarm[1] = 1
stack2layer = 1248
stack2type = 12
stack2shield = round(2510 * bpower)
stack2amount = round(10 * global.waveloop)
stack2delay = 100 / global.wavespeed
alarm[2] = 60 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 65 + 10 * global.freeplaycycle
{
stack1layer = 5248
stack1shield = round(4000 * bpower)
stack1amount = round(5 * global.waveloop)
stack1delay = 250 / global.wavespeed
alarm[1] = 1
stack2layer = 3318
stack2shield = round(3000 * bpower)
stack2amount = round(5 * global.waveloop)
stack2delay = 250 / global.wavespeed
alarm[2] = 250 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 66 + 10 * global.freeplaycycle
{
stack1layer = 248
stack1shield = round(300 * bpower)
stack1amount = round(40 * global.waveloop)
stack1delay = 25 / global.wavespeed
alarm[1] = 1
stack2layer = 17248
stack2shield = round(12000 * bpower)
stack2amount = round(1 * global.waveloop)
stack2delay = 800 / global.wavespeed
alarm[2] = 200 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 67 + 10 * global.freeplaycycle
{
stack1layer = 10068.5
stack1shield = round(10000 * bpower)
stack1amount = round(40 * global.waveloop)
stack1delay = 30 / global.wavespeed
alarm[1] = 1
stack2layer = 918
stack2shield = round(3500 * bpower)
stack2amount = round(1 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 300 / global.wavespeed
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 68 + 10 * global.freeplaycycle
{
stack1layer = 348
stack1type = 12
stack1shield = round(710 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 45 / global.wavespeed
alarm[1] = 1
stack2layer = 5248
stack2type = 12
stack2shield = round(10510 * bpower)
stack2amount = round(2 * global.waveloop)
stack2delay = 400 / global.wavespeed
alarm[2] = 200 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 69 + 10 * global.freeplaycycle
{
stack1layer = 10068.5
stack1shield = round(10000 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 70 / global.wavespeed
alarm[1] = 1
stack2layer = 2593
stack2shield = round(2000 * bpower)
stack2amount = round(6 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 300 / global.wavespeed
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 70 + 10 * global.freeplaycycle
{
stack1layer = 918
stack1shield = round(3500 * bpower)
stack1amount = round(3 * global.waveloop)
stack1delay = 1000 / global.wavespeed
alarm[1] = 1
stack2layer = 17248
stack2shield = round(12000 * bpower)
stack2amount = round(2 * global.waveloop)
stack2delay = 1000 / global.wavespeed
alarm[2] = 500 / global.wavespeed
alarm[0] = alarm[1] + 100 + round(stack1amount * stack1delay)
global.freeplaycycle += 1
if global.waveloop &lt; 4
{
global.waveloop += 0.4
}
if global.wavespeed &lt; (4 * (1 + global.wavesqueeze))
{
global.wavespeed += 0.4 * (1 + global.wavesqueeze)
}
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_Fast_Forward()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afterwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 60;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 90;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shiftpress</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloon</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>Going</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Factory</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(35)
{
if bananas &gt; 0
{
instance_create(x,y,Super_Banana)
bananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Banana_Tree</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if bananas &gt; 0
{
instance_create(x,y,Banana)
bananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthy_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if hbananas &gt; 0
{
instance_create(x,y,Healthy_Banana)
hbananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Healthier_Bananas</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(25)
{
if hbananas &gt; 0
{
instance_create(x,y,Healthier_Banana)
hbananas -= 1
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stack1type = 0
stack2type = 0
stack3type = 0
stack4type = 0
stack5type = 0
stack6type = 0
stack7type = 0
stack8type = 0
stack9type = 0
stack10type = 0
stack11type = 0

if global.wave = 61 + 10 * global.freeplaycycle
{
bpower += 0.2
global.bpower += 0.2
if global.bspeed &lt; 2.25
global.bspeed += 0.1

stack1layer = 48
stack1type = 12
stack1shield = round(110 * bpower)
stack1amount = round(120 * global.waveloop)
stack1delay = 12 / global.wavespeed
alarm[1] = 1
stack2layer = 5248
stack2type = 2
stack2shield = round(5255 * bpower)
stack2amount = round(4 * global.waveloop)
stack2delay = 480 / global.wavespeed
alarm[2] = 300
alarm[0] = alarm[2] + 300 + round(stack2amount * stack2delay)
}

if global.wave = 62 + 10 * global.freeplaycycle
{
stack1layer = 351
stack1shield = round(303 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 70 / global.wavespeed
alarm[1] = 1
stack10layer = 10
stack10type = 2
stack10shield = 90
stack10amount = round(100 * global.waveloop)
stack10delay = 20 / global.wavespeed
alarm[10] = 11 / global.wavespeed
stack11layer = 10
stack11type = 3
stack11shield = 120
stack11amount = round(100 * global.waveloop)
stack11delay = 20 / global.wavespeed
alarm[11] = 21 / global.wavespeed
alarm[0] = alarm[1] + 60 + round(stack1amount * stack1delay)
}

if global.wave = 63 + 10 * global.freeplaycycle
{
stack1layer = 18
stack1type = 6
stack1shield = round(50 * bpower)
stack1amount = round(120 * global.waveloop)
stack1delay = 12 / global.wavespeed
alarm[1] = 1
stack2layer = 2593
stack2shield = round(2000 * bpower)
stack2amount = round(4 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 60
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 64 + 10 * global.freeplaycycle
{
stack1layer = 93
stack1type = 12
stack1shield = round(200 * bpower)
stack1amount = round(75 * global.waveloop)
stack1delay = 15 / global.wavespeed
alarm[1] = 1
stack2layer = 1248
stack2type = 12
stack2shield = round(2510 * bpower)
stack2amount = round(10 * global.waveloop)
stack2delay = 100 / global.wavespeed
alarm[2] = 60 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 65 + 10 * global.freeplaycycle
{
stack1layer = 5248
stack1shield = round(4000 * bpower)
stack1amount = round(5 * global.waveloop)
stack1delay = 250 / global.wavespeed
alarm[1] = 1
stack2layer = 3318
stack2shield = round(3000 * bpower)
stack2amount = round(5 * global.waveloop)
stack2delay = 250 / global.wavespeed
alarm[2] = 250 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 66 + 10 * global.freeplaycycle
{
stack1layer = 248
stack1shield = round(300 * bpower)
stack1amount = round(40 * global.waveloop)
stack1delay = 25 / global.wavespeed
alarm[1] = 1
stack2layer = 17248
stack2shield = round(12000 * bpower)
stack2amount = round(1 * global.waveloop)
stack2delay = 800 / global.wavespeed
alarm[2] = 200 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 67 + 10 * global.freeplaycycle
{
stack1layer = 10068.5
stack1shield = round(10000 * bpower)
stack1amount = round(40 * global.waveloop)
stack1delay = 30 / global.wavespeed
alarm[1] = 1
stack2layer = 918
stack2shield = round(3500 * bpower)
stack2amount = round(1 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 300 / global.wavespeed
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 68 + 10 * global.freeplaycycle
{
stack1layer = 348
stack1type = 12
stack1shield = round(710 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 45 / global.wavespeed
alarm[1] = 1
stack2layer = 5248
stack2type = 12
stack2shield = round(10510 * bpower)
stack2amount = round(2 * global.waveloop)
stack2delay = 400 / global.wavespeed
alarm[2] = 200 + round(stack1amount * stack1delay)
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 69 + 10 * global.freeplaycycle
{
stack1layer = 10068.5
stack1shield = round(10000 * bpower)
stack1amount = round(30 * global.waveloop)
stack1delay = 70 / global.wavespeed
alarm[1] = 1
stack2layer = 2593
stack2shield = round(2000 * bpower)
stack2amount = round(6 * global.waveloop)
stack2delay = 300 / global.wavespeed
alarm[2] = 300 / global.wavespeed
alarm[0] = alarm[2] + 60 + round(stack2amount * stack2delay)
}

if global.wave = 70 + 10 * global.freeplaycycle
{
stack1layer = 918
stack1shield = round(3500 * bpower)
stack1amount = round(3 * global.waveloop)
stack1delay = 1000 / global.wavespeed
alarm[1] = 1
stack2layer = 17248
stack2shield = round(12000 * bpower)
stack2amount = round(2 * global.waveloop)
stack2delay = 1000 / global.wavespeed
alarm[2] = 500 / global.wavespeed
alarm[0] = alarm[1] + 100 + round(stack1amount * stack1delay)
global.freeplaycycle += 1
if global.waveloop &lt; 4
{
global.waveloop += 0.4
}
if global.wavespeed &lt; (4 * (1 + global.wavesqueeze))
{
global.wavespeed += 0.4 * (1 + global.wavesqueeze)
}
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wavenow</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cycle</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
