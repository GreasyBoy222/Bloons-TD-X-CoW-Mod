<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Banana_Duster_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Banana_Mobile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attackrate</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>range</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>110</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ppbuff</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leaddetect</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>camodetect</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>select</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit_id = noone;

if path_position = 0
{

x = BloonSpawn.x
y = BloonSpawn.y

path = 0

if global.track = 1
{
   path_start(Monkey_Meadows, 0, path_action_restart, 1);
   move = path_index
}
if global.track = 2
{
   path_start(Bloon_Oasis_Path, 0, path_action_restart, 1);
   move = path_index
}
if global.track = 3
{
if path = 0
path_start(Spiral_Swamp_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Spiral_Swamp_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 4
{
   path_start(Monkey_Fort_Path, 0, path_action_restart, 1);
move = path_index
}
if global.track = 5
{
if path = 0
path_start(Monkey_Town_Docks_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Monkey_Town_Docks_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 6
{
   path_start(Conveyor_Belt_Path, 0, path_action_restart, 1);
move = path_index
}
if global.track = 7
{
if path = 0
path_start(The_Depths_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(The_Depths_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 8
{
if global.cycle = 1
path_start(Sun_Dial_Path_A, 0, path_action_restart, 1);
move = path_index
if global.cycle = 2
path_start(Sun_Dial_Path_B, 0, path_action_restart, 1);
move = path_index
if global.cycle = 3
path_start(Sun_Dial_Path_C, 0, path_action_restart, 1);
move = path_index
if global.cycle = 4
path_start(Sun_Dial_Path_D, 0, path_action_restart, 1);
move = path_index
}
if global.track = 9
{
if path = 0
path_start(Shade_Woods_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Shade_Woods_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 10
{
if path = 0
path_start(Minecarts_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Minecarts_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 11
{
if path = 0
path_start(Crimson_Creek_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Crimson_Creek_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 12
{
if path = 0
path_start(Xtreme_Park_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Xtreme_Park_Path_B, 0, path_action_restart, 1);
move = path_index
if path = 2
path_start(Xtreme_Park_Path_C, 0, path_action_restart, 1);
move = path_index
if path = 3
path_start(Xtreme_Park_Path_D, 0, path_action_restart, 1);
move = path_index
}
if global.track = 14
{
path_start(Omega_River_Path, 0, path_action_restart, 1);
move = path_index
}
if global.track = 15
{
if path = 0
path_start(Space_Portals_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Space_Portals_Path_B, 0, path_action_restart, 1);
move = path_index
if path = 2
path_start(Space_Portals_Path_C, 0, path_action_restart, 1);
move = path_index
}
if global.track = 13
{
path_start(Portal_Lab_Path, 0, path_action_restart, 1);
move = path_index
}
if global.track = 16
{
path_start(Prison_Break_Path, 0, path_action_restart, 1);
move = path_index
}
if global.track = 17
{
path_start(Bloonlight_Throwback_Path, 0, path_action_restart, 1);
move = path_index
}
if global.track = 18
{
if path = 0
path_start(Bloon_Circles_X_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Bloon_Circles_X_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 19
{
if path = 0
path_start(Autumn_Acres_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Autumn_Acres_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 20
{
if path = 0
path_start(Graveyard_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Graveyard_Path_B, 0, path_action_restart, 1);
move = path_index
if path = 2
path_start(Graveyard_Path_C, 0, path_action_restart, 1);
move = path_index
}
if global.track = 21
{
if path = 0
path_start(Village_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Village_B, 0, path_action_restart, 1);
move = path_index
if path = 2
path_start(Village_C, 0, path_action_restart, 1);
if path = 3
path_start(Village_D, 0, path_action_restart, 1);
if path = 4
path_start(Village_F, 0, path_action_restart, 1);
if path = 5
path_start(Village_G, 0, path_action_restart, 1);
if path = 6
path_start(Village_H, 0, path_action_restart, 1);
if path = 7
path_start(Village_I, 0, path_action_restart, 1);
if path = 8
path_start(Village_J, 0, path_action_restart, 1);
if path = 9
path_start(Village_K, 0, path_action_restart, 1);
if path = 10
path_start(Village_L, 0, path_action_restart, 1);
if path = 11
path_start(Village_M, 0, path_action_restart, 1);
if path = 12
path_start(Village_N, 0, path_action_restart, 1);
if path = 13
path_start(Village_O, 0, path_action_restart, 1);
move = path_index
}
if global.track = 22
{
if path = 0
path_start(Circuit_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Circuit_Path_B, 0, path_action_restart, 1);
move = path_index
if path = 2
path_start(Circuit_Path_C, 0, path_action_restart, 1);
move = path_index
if path = 3
path_start(Circuit_Path_D, 0, path_action_restart, 1);
move = path_index
}
if global.track = 23
{
if path = 0
path_start(Grand_Canyon_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Grand_Canyon_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 24
{
if path = 0
path_start(Bloonside_River_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Bloonside_River_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 25
{
if path = 0
path_start(Lunar_Temple_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Lunar_Temple_Path_B, 0, path_action_restart, 1);
move = path_index
}
if global.track = 26
{
path_start(Birthday_Party_Path, 0, path_action_restart, 1);
move = path_index
}

if global.track = 27
{
if path = 0
path_start(Rubber_Rug_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Rubber_Rug_Path_B, 0, path_action_restart, 1);
move = path_index
}

if global.track = 28
{
if path = 0
path_start(Frozen_Lake_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Frozen_Lake_Path_B, 0, path_action_restart, 1);
move = path_index
if path = 2
path_start(Frozen_Lake_Path_C, 0, path_action_restart, 1);
move = path_index
if path = 3
path_start(Frozen_Lake_Path_D, 0, path_action_restart, 1);
move = path_index
}

if global.track = 29
{
if path = 0
path_start(Sky_Battles_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Sky_Battles_Path_B, 0, path_action_restart, 1);
move = path_index
}

if global.track = 30
{
if path = 0
path_start(Lava_Stream_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Lava_Stream_Path_B, 0, path_action_restart, 1);
move = path_index
if path = 2
path_start(Lava_Stream_Path_C, 0, path_action_restart, 1);
move = path_index
}

if global.track = 31
{
if path = 0
path_start(Ravine_River_Path_A, 0, path_action_restart, 1);
move = path_index
if path = 1
path_start(Ravine_River_Path_B, 0, path_action_restart, 1);
move = path_index
}

if global.track = 32
{
if path = 0
path_start(Peaceful_Bridge_Path, 0, path_action_restart, 1);
move = path_index
}
path_speed = 4

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>level</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fuel</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>6</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>36 / path_speed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fuel &gt;= 200
{
with instance_create(x,y,Mobile_Attack)
{
image_angle = other.image_angle
LP = 3;
PP = 150;
image_xscale = 1.4;
image_yscale = 1.4;
leadpop = 1;
camopop = 1;
alarm[0] = 1;
}
fuel -= 2
}
if fuel &gt; 0 and fuel &lt; 200
{
with instance_create(x,y,Mobile_Attack)
{
image_angle = other.image_angle
image_xscale = 1.25;
image_yscale = 1.25;
LP = 2;
PP = 100;
leadpop = 1;
camopop = 1;
alarm[0] = 1;
}
fuel -= 0.5
}
if fuel = 0
{
with instance_create(x,y,Mobile_Attack)
{
image_angle = other.image_angle
image_xscale = 1.1;
image_yscale = 1.1;
LP = 1;
PP = 50;
leadpop = 1;
camopop = 1;
alarm[0] = 1;
}
}

f = frac(fuel / 20)
if f = 0 || f = 0.1 || f = 0.05
if fuel &gt; 0 
{
with instance_create(x,y,Banana_Pile)
{
speed = 0
LP = 1;
PP = 6;
leadpop = 1;
camopop = 1;
range = 900;
alarm[0] = 900;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>n = random(30)

if n &gt; 29 {
with(Banana) {
friction = 0
speed = 30
move_towards_point(other.x, other.y, 30);
}
with(Super_Banana) {
friction = 0
speed = 30
move_towards_point(other.x, other.y, 30);
}
with(Healthy_Banana) {
friction = 0
speed = 30
move_towards_point(other.x, other.y, 30);
}
with(Healthier_Banana) {
friction = 0
speed = 30
move_towards_point(other.x, other.y, 30);
}
with(Revenge_Banana) {
friction = 0
speed = 30
move_towards_point(other.x, other.y, 30);
}
with(Blood_Banana) {
friction = 0
speed = 30
move_towards_point(other.x, other.y, 30);
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;

if fuel &gt;= 200
{
path_speed = 18
image_index = 2
}
if fuel &gt; 0 and fuel &lt; 200
{
path_speed = 12
image_index = 1
}
if fuel &lt;= 0
{
path_speed = 6
image_index = 0
fuel = 0
}

if level &gt;= 15
{
instance_change(Banana_Drifter,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
