<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Play_Bar_Spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.challenge = 0
global.pointmultiplier = 1
global.towerlimit = 1000000


global.sixtowers = 0
global.randomtowers = 0
global.wavesqueeze = 0
global.waveskip = 0
global.strongerbloons = 0
global.fasterbloons = 0
global.noliveslost = 0
if global.rank &lt; 20
global.blooninfo = 1
else
global.blooninfo = 0



global.DMlock = 0
global.TSlock = 0
global.BMlock = 0
global.SnMlock = 0
global.NMlock = 0
global.BClock = 0
global.MSlock = 0
global.CTlock = 0
global.MBlock = 0
global.MElock = 0
global.GGlock = 0
global.IMlock = 0
global.MAlock = 0
global.BChlock = 0
global.MAplock = 0
global.MAllock = 0
global.MVlock = 0
global.BTlock = 0
global.DGlock = 0
global.MLlock = 0
global.SFlock = 0
global.HPlock = 0
global.PMlock = 0
global.SuMlock = 0
global.Derlock = 0

tower_locks = ds_list_create()
ds_list_add(tower_locks, 0, global.DMlock, global.TSlock, global.BMlock, global.SnMlock, global.NMlock, global.BClock, global.MSlock, global.CTlock);
ds_list_add(tower_locks, global.MBlock, global.MElock, global.GGlock, global.IMlock, global.MAlock, global.BChlock, global.MAplock, global.MAllock);
ds_list_add(tower_locks, global.MVlock, global.BTlock, global.DGlock, global.MLlock, global.SFlock, global.HPlock, global.PMlock, global.SuMlock);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.trackselect = 1
room_goto(Monkey_Meadows_Norm);
if global.trackselect = 2
room_goto(Bloon_Oasis_Norm);
if global.trackselect = 3
room_goto(Swamp_Spirals_Norm);
if global.trackselect = 4
room_goto(Monkey_Fort_Norm);
if global.trackselect = 5
room_goto(Monkey_Town_Docks_Norm);
if global.trackselect = 6
room_goto(Conveyor_Belts_Norm);
if global.trackselect = 7
room_goto(The_Depths_Norm);
if global.trackselect = 8
room_goto(Sun_Stone_Norm);
if global.trackselect = 9
room_goto(Shade_Woods_Norm);
if global.trackselect = 10
room_goto(Minecarts_Norm);
if global.trackselect = 11
room_goto(Crimson_Creek_Norm);
if global.trackselect = 12
room_goto(Xtreme_Park_Norm);
if global.trackselect = 13
room_goto(Portal_Lab_Norm);
if global.trackselect = 14
room_goto(Omega_River_Norm);
if global.trackselect = 15
room_goto(Space_Portals_Norm);
if global.trackselect = 17
room_goto(Bloonlight_Throwback_Norm);
if global.trackselect = 18
room_goto(Bloon_Circles_X_Norm);
if global.trackselect = 19
room_goto(Autumn_Acres_Norm);
if global.trackselect = 20
room_goto(Graveyard_Norm);
if global.trackselect = 21
room_goto(Village_Defense_Norm);
if global.trackselect = 22
room_goto(Circuit_Norm);
if global.trackselect = 23
room_goto(Grand_Canyon_Norm);
if global.trackselect = 24
room_goto(Bloonside_River_Norm);
if global.trackselect = 25
room_goto(Cotton_Fields_Norm);
if global.trackselect = 27
room_goto(Rubber_Rug_Norm);
if global.trackselect = 28
room_goto(Frozen_Lake_Norm);
if global.trackselect = 29
room_goto(Sky_Battles_Norm);
if global.trackselect = 30
room_goto(Lava_Stream_Norm);
if global.trackselect = 31
room_goto(Ravine_River_Norm);
if global.trackselect = 32
room_goto(Peaceful_Bridge_Norm);

if global.impoppablemodeselect = 1
{
global.pointmultiplier = 1.5
}

if global.nightmaremodeselect = 1
{
global.pointmultiplier = 2

}

if global.timemodeselect = 1
{
if global.trackselect = 1
room_goto(Monkey_Meadows_Time);
if global.trackselect = 2
room_goto(Bloon_Oasis_Time);
if global.trackselect = 3
room_goto(Swamp_Spirals_Time);
if global.trackselect = 4
room_goto(Monkey_Fort_Time);
if global.trackselect = 5
room_goto(Monkey_Town_Docks_Time);
if global.trackselect = 6
room_goto(Conveyor_Belts_Time);
if global.trackselect = 7
room_goto(The_Depths_Time);
if global.trackselect = 8
room_goto(Sun_Stone_Time);
if global.trackselect = 9
room_goto(Shade_Woods_Time);
if global.trackselect = 10
room_goto(Minecarts_Time);
if global.trackselect = 11
room_goto(Crimson_Creek_Time);
if global.trackselect = 12
room_goto(Xtreme_Park_Time);
if global.trackselect = 13
room_goto(Portal_Lab_Time);
if global.trackselect = 14
room_goto(Omega_River_Time);
if global.trackselect = 15
room_goto(Space_Portals_Time);
if global.trackselect = 17
room_goto(Bloonlight_Throwback_Time);
if global.trackselect = 18
room_goto(Bloon_Circles_X_Time);
if global.trackselect = 19
room_goto(Autumn_Acres_Time);
if global.trackselect = 20
room_goto(Graveyard_Time);
if global.trackselect = 21
room_goto(Village_Defense_Time);
if global.trackselect = 22
room_goto(Circuit_Time);
if global.trackselect = 23
room_goto(Grand_Canyon_Time);
if global.trackselect = 24
room_goto(Bloonside_River_Time);

if global.trackselect = 27
room_goto(Rubber_Rug_Time);
if global.trackselect = 28
room_goto(Frozen_Lake_Time);
if global.trackselect = 29
room_goto(Sky_Battles_Time);
if global.trackselect = 30
room_goto(Lava_Stream_Time);
if global.trackselect = 31
room_goto(Ravine_River_Time);
if global.trackselect = 32
room_goto(Peaceful_Bridge_Time);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.randomtowers = 0
{
global.DMlock = 1 + ds_list_find_value(tower_locks, 1);
global.TSlock = 1 + ds_list_find_value(tower_locks, 2);
global.BMlock = 1 + ds_list_find_value(tower_locks, 3);
global.SnMlock = 1 + ds_list_find_value(tower_locks, 4);
global.NMlock = 1 + ds_list_find_value(tower_locks, 5);
global.BClock = 1 + ds_list_find_value(tower_locks, 6);
global.MSlock = 1 + ds_list_find_value(tower_locks, 7);
global.CTlock = 1 + ds_list_find_value(tower_locks, 8);
global.MBlock = 1 + ds_list_find_value(tower_locks, 9);
global.MElock = 1 + ds_list_find_value(tower_locks, 10);
global.GGlock = 1 + ds_list_find_value(tower_locks, 11);
global.IMlock = 1 + ds_list_find_value(tower_locks, 12);
global.MAlock = 1 + ds_list_find_value(tower_locks, 13);
global.BChlock = 1 + ds_list_find_value(tower_locks, 14);
global.MAplock = 1 + ds_list_find_value(tower_locks, 15);
global.MAllock = 1 + ds_list_find_value(tower_locks, 16);
global.MVlock = 1 + ds_list_find_value(tower_locks, 17);
global.BTlock = 1 + ds_list_find_value(tower_locks, 18);
global.DGlock = 1 + ds_list_find_value(tower_locks, 19);
global.MLlock = 1 + ds_list_find_value(tower_locks, 20);
global.SFlock = 1 + ds_list_find_value(tower_locks, 21);
global.HPlock = 1 + ds_list_find_value(tower_locks, 22);
global.PMlock = 1 + ds_list_find_value(tower_locks, 23);
global.SuMlock = 1 + ds_list_find_value(tower_locks, 24);
//global.Derlock = 1 + ds_list_find_value(tower_locks, 101);
}

if global.normalmodeselect = 1 or global.impoppablemodeselect = 1 
if global.randomtowers = 1
{
global.pointmultiplier = global.pointmultiplier * 2.2
ds_list_replace(tower_locks,1,1)
ds_list_replace(tower_locks,2,1)
ds_list_replace(tower_locks,3,1)
ds_list_replace(tower_locks,4,1)
ds_list_replace(tower_locks,5,1)
ds_list_replace(tower_locks,6,1)
ds_list_replace(tower_locks,7,1)
ds_list_shuffle(tower_locks)
global.DMlock = ds_list_find_value(tower_locks, 1);
global.TSlock = ds_list_find_value(tower_locks, 2);
global.BMlock = ds_list_find_value(tower_locks, 3);
global.SnMlock = ds_list_find_value(tower_locks, 4);
global.NMlock = ds_list_find_value(tower_locks, 5);
global.BClock = ds_list_find_value(tower_locks, 6);
global.MSlock = ds_list_find_value(tower_locks, 7);
global.CTlock = ds_list_find_value(tower_locks, 8);
global.MBlock = ds_list_find_value(tower_locks, 9);
global.MElock = ds_list_find_value(tower_locks, 10);
global.GGlock = ds_list_find_value(tower_locks, 11);
global.IMlock = ds_list_find_value(tower_locks, 12);
global.MAlock = ds_list_find_value(tower_locks, 13);
global.BChlock = ds_list_find_value(tower_locks, 14);
global.MAplock = ds_list_find_value(tower_locks, 15);
global.MAllock = ds_list_find_value(tower_locks, 16);
global.MVlock = ds_list_find_value(tower_locks, 17);
global.BTlock = ds_list_find_value(tower_locks, 18);
global.DGlock = ds_list_find_value(tower_locks, 19);
global.MLlock = ds_list_find_value(tower_locks, 20);
global.SFlock = ds_list_find_value(tower_locks, 21);
global.HPlock = ds_list_find_value(tower_locks, 22);
global.PMlock = ds_list_find_value(tower_locks, 23);
global.SuMlock = ds_list_find_value(tower_locks, 24);
//global.Derlock = ds_list_find_value(tower_locks, 101);
}

if global.normalmodeselect = 1
{
if global.sixtowers = 1
{
global.pointmultiplier = global.pointmultiplier * 1.6
global.towerlimit = 6
}
else
global.towerlimit = 1000

if global.wavesqueeze = 1
{
global.pointmultiplier = global.pointmultiplier * 1.6
}

if global.waveskip = 1
{
global.pointmultiplier = global.pointmultiplier * 2
}

if global.strongerbloons = 1
{
global.pointmultiplier = global.pointmultiplier * 1.35
}

if global.fasterbloons = 1
{
global.pointmultiplier = global.pointmultiplier * 1.45
}

if global.noliveslost = 1
{
global.pointmultiplier = global.pointmultiplier * 1.25
}
}

if global.impoppablemodeselect = 1
{
if global.sixtowers = 1
{
global.pointmultiplier = global.pointmultiplier * 1.6
global.towerlimit = 6
}
else
global.towerlimit = 1000

if global.wavesqueeze = 1
{
global.pointmultiplier = global.pointmultiplier * 1.6
}

if global.waveskip = 1
{
global.pointmultiplier = global.pointmultiplier * 2
}

if global.strongerbloons = 1
{
global.pointmultiplier = global.pointmultiplier * 1.35
}

if global.fasterbloons = 1
{
global.pointmultiplier = global.pointmultiplier * 1.45
}

if global.noliveslost = 1
{
global.pointmultiplier = global.pointmultiplier * 1.25
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
