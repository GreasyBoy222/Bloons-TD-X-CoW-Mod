<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Milestones_Panels</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_play(Winning);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>font0</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(Milestones_Panels,image_index,x,y)
if difficulty = 0
{
if global.wave &gt;= 40 and global.wave &lt; 60
{
image_index = 1
draw_text(420, 248, "x2");
draw_text(440, 300, "x60");
}
if global.wave &gt;= 60 and global.wave &lt; 75
{
image_index = 2
draw_text(420, 248, "x3");
draw_text(440, 300, "x90");
}
if global.wave &gt;= 75 and global.wave &lt; 90
{
image_index = 3
draw_text(420, 248, "x4");
draw_text(440, 300, "x120");
}
if global.wave &gt;= 90
{
image_index = 4
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 140
{
image_index = 9
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 190
{
image_index = 10
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
}

if difficulty = 1
{
if global.wave &gt;= 40 and global.wave &lt; 60
{
image_index = 1
draw_text(420, 248, "x3");
draw_text(440, 300, "x90");
}
if global.wave &gt;= 60 and global.wave &lt; 75
{
image_index = 2
draw_text(420, 248, "x4");
draw_text(440, 300, "x120");
}
if global.wave &gt;= 75 and global.wave &lt; 90
{
image_index = 3
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 90
{
image_index = 4
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 140
{
image_index = 9
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 190
{
image_index = 10
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
}

if difficulty = 2
{
if global.wave &gt;= 40 and global.wave &lt; 60
{
image_index = 1
draw_text(420, 248, "x4");
draw_text(440, 300, "x120");
}
if global.wave &gt;= 60 and global.wave &lt; 75
{
image_index = 2
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 75 and global.wave &lt; 90
{
image_index = 3
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 90
{
image_index = 4
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 140
{
image_index = 9
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 190
{
image_index = 10
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
}
if difficulty = 3
{
if global.wave &gt;= 40 and global.wave &lt; 60
{
image_index = 1
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 60 and global.wave &lt; 75
{
image_index = 2
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 75 and global.wave &lt; 90
{
image_index = 3
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 90
{
image_index = 4
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 140
{
image_index = 9
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 90
{
image_index = 10
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
}

if difficulty = 10
{
if global.wave &gt;= 35 and global.wave &lt; 50
{
image_index = 5
draw_text(420, 248, "x3");
draw_text(440, 300, "x90");
}
if global.wave &gt;= 50 and global.wave &lt; 65
{
image_index = 6
draw_text(420, 248, "x4");
draw_text(440, 300, "x120");
}
if global.wave &gt;= 65 and global.wave &lt; 75
{
image_index = 7
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 75
{
image_index = 8
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 125
{
image_index = 11
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 175
{
image_index = 12
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
}

if difficulty = 11
{
if global.wave &gt;= 35 and global.wave &lt; 50
{
image_index = 5
draw_text(420, 248, "x4");
draw_text(440, 300, "x120");
}
if global.wave &gt;= 50 and global.wave &lt; 65
{
image_index = 6
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 65 and global.wave &lt; 75
{
image_index = 7
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 75
{
image_index = 8
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 125
{
image_index = 11
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 175
{
image_index = 12
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
}
if difficulty = 12
{
if global.wave &gt;= 35 and global.wave &lt; 50
{
image_index = 5
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 50 and global.wave &lt; 65
{
image_index = 6
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 65 and global.wave &lt; 75
{
image_index = 7
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 75
{
image_index = 8
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 125
{
image_index = 11
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 75
{
image_index = 12
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
}
if difficulty = 13
{
if global.wave &gt;= 35 and global.wave &lt; 50
{
image_index = 5
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 50 and global.wave &lt; 65
{
image_index = 6
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 65 and global.wave &lt; 75
{
image_index = 7
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 75
{
image_index = 8
draw_text(420, 248, "x9");
draw_text(440, 300, "x270");
}
if global.wave &gt;= 125
{
image_index = 11
draw_text(420, 248, "x9");
draw_text(440, 300, "x270");
}
if global.wave &gt;= 75
{
image_index = 12
draw_text(420, 248, "x9");
draw_text(440, 300, "x270");
}
}



if difficulty = 20
{
if global.wave &gt;= 30 and global.wave &lt; 40
{
image_index = 14
draw_text(420, 248, "x4");
draw_text(440, 300, "x120");
}
if global.wave &gt;= 40 and global.wave &lt; 50
{
image_index = 15
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 50 and global.wave &lt; 60
{
image_index = 16
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 60
{
image_index = 17
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 110
{
image_index = 18
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 160
{
image_index = 19
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
}

if difficulty = 21
{
if global.wave &gt;= 30 and global.wave &lt; 40
{
image_index = 14
draw_text(420, 248, "x5");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 40 and global.wave &lt; 50
{
image_index = 15
draw_text(420, 248, "x6");
draw_text(440, 300, "x180");
}
if global.wave &gt;= 50 and global.wave &lt; 60
{
image_index = 16
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 60
{
image_index = 17
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 110
{
image_index = 18
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 160
{
image_index = 19
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
}
if difficulty = 22
{
if global.wave &gt;= 30 and global.wave &lt; 40
{
image_index = 14
draw_text(420, 248, "x6");
draw_text(440, 300, "x150");
}
if global.wave &gt;= 40 and global.wave &lt; 50
{
image_index = 15
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 50 and global.wave &lt; 60
{
image_index = 16
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 60
{
image_index = 17
draw_text(420, 248, "x9");
draw_text(440, 300, "x270");
}
if global.wave &gt;= 110
{
image_index = 18
draw_text(420, 248, "x9");
draw_text(440, 300, "x270");
}
if global.wave &gt;= 160
{
image_index = 19
draw_text(420, 248, "x9");
draw_text(440, 300, "x270");
}
}
if difficulty = 23
{
if global.wave &gt;= 30 and global.wave &lt; 40
{
image_index = 14
draw_text(420, 248, "x7");
draw_text(440, 300, "x210");
}
if global.wave &gt;= 40 and global.wave &lt; 50
{
image_index = 15
draw_text(420, 248, "x8");
draw_text(440, 300, "x240");
}
if global.wave &gt;= 50 and global.wave &lt; 60
{
image_index = 16
draw_text(420, 248, "x9");
draw_text(440, 300, "x270");
}
if global.wave &gt;= 60
{
image_index = 17
draw_text(420, 248, "x10");
draw_text(440, 300, "x300");
}
if global.wave &gt;= 110
{
image_index = 18
draw_text(420, 248, "x10");
draw_text(440, 300, "x300");
}
if global.wave &gt;= 160
{
image_index = 19
draw_text(420, 248, "x10");
draw_text(440, 300, "x300");
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
