<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sun_Temple_Spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Monkey</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_play(Temple_sound);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>farmpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>villagepower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dartpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tackpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>snipepower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rangpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ninjapower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bombpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>subpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>chargepower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gluepower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>icepower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>buccpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>engineerpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>acepower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>chipperpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>apprenticepower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alchemistpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dartlingpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mortarpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spactorypower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>helipower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>plasmapower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>superpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Tric</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attackrate</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>charge</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>range</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>200</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ppbuff</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>camodetect</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leaddetect</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>select</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2 / attackrate</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>11</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
instance_create(x-48,y-16,Block)
instance_create(x-16,y-48,Block)
instance_create(x+16,y-16,Block)
instance_create(x-16,y+16,Block)
instance_create(x-48,y-48,Block)
instance_create(x+16,y+16,Block)
instance_create(x-48,y+16,Block)
instance_create(x+16,y-48,Block)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (SMFC_Aficionado)
{
{ if distance_to_object(other)&lt;=180
other.dartpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Dart_Tank)
{ if distance_to_object(other)&lt;=180
{
other.dartpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Juggernaut)
{ if distance_to_object(other)&lt;=180
{
other.dartpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Turbo_Charge)
{ if distance_to_object(other)&lt;=180
{
other.rangpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Glaive_Lord)
{ if distance_to_object(other)&lt;=180
{
other.rangpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Megarang_Toss)
{ if distance_to_object(other)&lt;=180
{
other.rangpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Mass_Distraction)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
instance_destroy()
other.camodetect = 1
instance_create(x-16,y-16,Block) }}
with (Ninja_God)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
instance_destroy()
other.camodetect = 1
instance_create(x-16,y-16,Block) }}
with (Crouching_Monkey)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
instance_destroy()
other.camodetect = 1
instance_create(x-16,y-16,Block) }}

with (Tack_Typhoon)
{ if distance_to_object(other)&lt;=180
{
other.tackpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Ring_of_Fire)
{ if distance_to_object(other)&lt;=180
{
other.tackpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Blade_Maelstrom)
{ if distance_to_object(other)&lt;=180
{
other.tackpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (RPG_Strike)
{ if distance_to_object(other)&lt;=180
{
other.snipepower += 1
other.alarm[4] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}
with (Moab_Crippler)
{ if distance_to_object(other)&lt;=180
{
other.snipepower += 1
other.alarm[4] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}
with (Supply_Drones)
{ if distance_to_object(other)&lt;=180
{
other.snipepower += 1
other.alarm[4] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}

with (Moab_Assassin_Cannon)
{ if distance_to_object(other)&lt;=180
{
other.bombpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Explosion_King)
{ if distance_to_object(other)&lt;=180
{
other.bombpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (MOAP_Cannon)
{ if distance_to_object(other)&lt;=180
{
other.bombpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Mass_Distraction)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
other.camodetect = 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Ninja_God)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
other.camodetect = 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Hidden_Monkey)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
other.camodetect = 1
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Blockade_Sub)
{ if distance_to_object(other)&lt;=180
{
other.subpower += 1
other.alarm[1] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}
with (Anti_Matter_Reactor)
{ if distance_to_object(other)&lt;=180
{
other.subpower += 1
other.alarm[1] = 24
instance_destroy()
other.range += 10
other.camodetect = 1
instance_create(x-16,y-16,Block) }}
with (First_Strike_Sub)
{ if distance_to_object(other)&lt;=180
{
other.subpower += 1
other.alarm[1] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}

with (Charge_Overload)
{ if distance_to_object(other)&lt;=180
{
other.chargepower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Gravity_Bomb_Charger)
{ if distance_to_object(other)&lt;=180
{
other.chargepower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Lightning_Bomb)
{ if distance_to_object(other)&lt;=180
{
other.chargepower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Glue_Striker)
{ if distance_to_object(other)&lt;=180
{
other.gluepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Moab_Poison)
{ if distance_to_object(other)&lt;=180
{
other.gluepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Propeller_Glue)
{ if distance_to_object(other)&lt;=180
{
other.gluepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Freezerburn_Cannon_XL)
{ if distance_to_object(other)&lt;=180
{
other.icepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Absolute_Zero)
{ if distance_to_object(other)&lt;=180
{
other.icepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Ice_Storm)
{ if distance_to_object(other)&lt;=180
{
other.icepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Aircraft_Carrier)
{ if distance_to_object(other)&lt;=180
{
other.buccpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Pirate_Captain_Ship)
{ if distance_to_object(other)&lt;=180
{
other.buccpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (MOAB_Takedown)
{ if distance_to_object(other)&lt;=180
{
other.buccpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Grid_Lock)
{ if distance_to_object(other)&lt;=180
{
other.engineerpower += 1
other.alarm[5] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Omega_Tech)
{ if distance_to_object(other)&lt;=180
{
other.engineerpower += 1
other.alarm[5] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Bloon_Containment_Unit)
{ if distance_to_object(other)&lt;=180
{
other.engineerpower += 1
other.alarm[5] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Hanger_5L)
{ if distance_to_object(other)&lt;=180
{
other.acepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Hanger_5M)
{ if distance_to_object(other)&lt;=180
{
other.acepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Hanger_5R)
{ if distance_to_object(other)&lt;=180
{
other.acepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Vampire_Blender)
{ if distance_to_object(other)&lt;=180
{
other.chipperpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Super_Wide_Funnel)
{ if distance_to_object(other)&lt;=180
{
other.chipperpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Supa_Vac)
{ if distance_to_object(other)&lt;=180
{
other.chipperpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Fire_God)
{ if distance_to_object(other)&lt;=180
{
other.apprenticepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Dark_God)
{ if distance_to_object(other)&lt;=180
{
other.apprenticepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Wind_God)
{ if distance_to_object(other)&lt;=180
{
other.apprenticepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Diamond_Alchemist)
{ if distance_to_object(other)&lt;=180
{
other.alchemistpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Chemical_Engineer)
{ if distance_to_object(other)&lt;=180
{
other.alchemistpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Amplifier)
{ if distance_to_object(other)&lt;=180
{
other.alchemistpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Nuke_Strike)
{ if distance_to_object(other)&lt;=180
{
other.mortarpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Ion_Cannon)
{ if distance_to_object(other)&lt;=180
{
other.mortarpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Pop_and_Awe)
{ if distance_to_object(other)&lt;=180
{
other.mortarpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Golden_Barrage)
{ if distance_to_object(other)&lt;=180
{
other.dartlingpower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Hyper_Ultra_Beam)
{ if distance_to_object(other)&lt;=180
{
other.dartlingpower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Bloon_Area_Denial_System)
{ if distance_to_object(other)&lt;=180
{
other.dartlingpower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Spike_Wall)
{ if distance_to_object(other)&lt;=180
{
other.spactorypower += 1
other.alarm[6] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Nebula)
{ if distance_to_object(other)&lt;=180
{
other.spactorypower += 1
other.alarm[6] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Spike_Storm)
{ if distance_to_object(other)&lt;=180
{
other.spactorypower += 1
other.alarm[6] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (AHanger_5L)
if distance_to_object(other)&lt;=180
{
other.helipower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block)
}
with (AHanger_5M)
if distance_to_object(other)&lt;=180
{
other.helipower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block)
}
with (AHanger_5R)
if distance_to_object(other)&lt;=180
{
other.helipower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block)
}

with (Moab_Drain)
{ if distance_to_object(other)&lt;=180
{
other.plasmapower += 1
other.alarm[7] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Omega_Rays)
{ if distance_to_object(other)&lt;=180
{
other.plasmapower += 1
other.alarm[7] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Red_Shift)
{ if distance_to_object(other)&lt;=180
{
other.plasmapower += 1
other.alarm[7] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Call_to_Arms)
{ if distance_to_object(other)&lt;=180
{
other.villagepower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Monkey_Metropolis)
{ if distance_to_object(other)&lt;=180
{
other.villagepower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Monkey_Energizer)
{ if distance_to_object(other)&lt;=180
{
other.villagepower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Golden_Fruit)
{ if distance_to_object(other)&lt;=180
{
other.farmpower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Banana_Replicator)
{ if distance_to_object(other)&lt;=180
{
other.farmpower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Insurance_Fraud)
{ if distance_to_object(other)&lt;=180
{
other.farmpower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Sun_Worshipper)
{ if distance_to_object(other)&lt;=180
{
other.superpower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
instance_create(x-16,y-16,Block)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attackrate</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>round(32 / attackrate)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>8</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = noone;
with Camo
if other.camodetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Normal
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Shield
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Lead
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
{

if gluepower &gt; 0
{
with instance_create(x, y, Sun_Glue)
{
move_towards_point(other.target.x, other.target.y, 18);
LP = 1 * other.gluepower;
corrosionpotency = 1 + 20 * other.gluepower;
PP = 10 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 27;
alarm[0] = range;
other.alarm[8] = round(32/other.attackrate)
}
with instance_create(x, y, Sun_Glue_2)
{
move_towards_point(other.target.x, other.target.y, 18);
LP = 1 * other.gluepower;
corrosionpotency = 1 + 20 * other.gluepower;
PP = 10 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 27;
alarm[0] = range;
other.alarm[8] = round(32/other.attackrate)
}
}

if icepower &gt; 0
{
with instance_create(x, y, Zero_Ice_Aura)
{
image_xscale = 1 + 0.2 * other.icepower
image_yscale = 1 + 0.2 * other.icepower
LP = 1 * other.icepower;
PP = 100 + 10 * other.icepower;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 9;
alarm[0] = range;
other.alarm[8] = round(32/other.attackrate)
}
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-200</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>7</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = noone;
with Moab_Class_Bloons
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
{
if plasmapower &gt; 0
with instance_create(x,y,Temple_Plasma)
{
move_towards_point(other.target.x, other.target.y, 15);
target = other.target
LP = 9 * other.plasmapower;
PP = 1 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 16;
alarm[0] = range;
other.alarm[7] = 1
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>(60 / attackrate)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>6</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = noone;
if instance_exists(Bloon)
with Path
if other.target == noone || spike &lt; other.target.spike
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
if spactorypower &gt; 0
with instance_create(x, y, Sun_Pile)
{
move_towards_point(other.target.x, other.target.y, 13);
LP = 3 * other.spactorypower;
PP = 120 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 1125;
alarm[0] = range;
other.alarm[6] = round(60/other.attackrate)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>(300 / attackrate)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>5</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x, y, Sun_Turret)
{
direction = random(360)
speed = 16 + random(20)
friction = 4;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-3000</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>round(4 / attackrate)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = noone;
with Camo
if other.camodetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, 20000, id, true, false)
other.target = id;
with Normal
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, 20000, id, true, false)
other.target = id;
with Shield
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, 20000, id, true, false)
other.target = id;
with Lead
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, 20000, id, true, false)
other.target = id;
if target != noone
{

if snipepower &gt; 0
with instance_create(x, y, Sun_Snipe)
{
move_towards_point(other.target.x, other.target.y, 45);
LP = 60 * other.snipepower;
PP = 1 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[4] = round(30/other.attackrate)
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-200</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>round(4 / attackrate)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = noone;
with Camo
if other.camodetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Normal
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Shield
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Lead
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
{

if tackpower &gt; 0
{
multi = 0
variance = random(15)
repeat(24)
{
with instance_create(x, y, Sun_Tack)
{
move_towards_point(other.target.x, other.target.y, 27);
LP = 4 * other.tackpower;
PP = 3 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 16;
direction = 15 * other.multi + other.variance
alarm[0] = range
other.alarm[3] = round(27 / other.attackrate)
}
multi += 1
}}

cycle = 0
if buccpower &gt; 0
repeat(5)
{
with instance_create(x,y,Sun_Dart)
{
move_towards_point(other.target.x, other.target.y, 36);
direction += 28 - other.cycle
LP = 8 * other.buccpower;
PP = 12 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 10;
alarm[0] = range;
other.alarm[3] = round(27/other.attackrate)
}
cycle += 14
}

if acepower &gt; 0
{
multi = 0
variance = random(15)
repeat(12)
{
with instance_create(x, y, Sun_Dart)
{
move_towards_point(other.target.x, other.target.y, 33);
LP = 6 * other.acepower;
PP = 20 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
direction = 30 * other.multi + other.variance
alarm[0] = range
other.alarm[3] = round(27 / other.attackrate)
}
multi += 1
}}

if alchemistpower &gt; 0
with instance_create(x, y, Sun_Potion)
{
move_towards_point(other.target.x, other.target.y, 27);
LP = 2 * other.alchemistpower;
PP = 600 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[3] = round(27/other.attackrate)
}

if apprenticepower &gt; 0
with instance_create(x, y, Sun_Wind)
{
move_towards_point(other.target.x, other.target.y, 25);
LP = 6 * other.apprenticepower;
PP = 150 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[3] = round(27/other.attackrate)
}

}
if object_exists(Bloon)
if mortarpower &gt; 0
with instance_create((mouse_x - 14 + random(20)),(mouse_y - 14 + random(20)),Sun_Explosion)
{
LP = 10 * other.mortarpower;
PP = 150;
image_xscale = 1.8;
image_yscale = 1.8;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 8;
alarm[1] = range;
other.alarm[3] = round(27/other.attackrate)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>chipperpower</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>value = id;
target = noone;
with Camo
if other.camodetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Normal
if other.target == noone || path_position &gt; other.target.path_position 
if collision_circle(other.x, other.y, other.range, id, true, false)
if object_index != Chipper_Bloon_Branch
if bigbloon &lt; 10000
other.target = id;
with Shield
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Lead
if other.leaddetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
with (target)
{
if bigbloon &gt; 2 {
other.alarm[0] = (30 / other.attackrate)
}
value = other.value
target_x = other.x
target_y = other.y
with instance_create(x,y,Chipper_Bloon_Branch)
   {
   bigbloon = other.bigbloon
   if other.bigbloon &gt; 1 and other.bigbloon &lt; 3 {
       armour = other.armour
       maxarmour = other.maxarmour
   }
   if other.bigbloon = 13.5 {
       armour = other.armour
       maxarmour = other.maxarmour
   }
   target_x = other.target_x
   target_y = other.target_y
   pophit = 4
   normal = other.normal
   camo = other.camo
   lead = other.lead
   regrow = other.regrow
   shielded = other.shielded
   electric = other.electric
   orig_x = other.x
   orig_y = other.y
   value = other.value
   radiation = other.radiation
   corrosion = other.corrosion
   freeze = other.freeze
   glue = other.glue
   alarm[4] = other.alarm[4]
   alarm[5] = other.alarm[5]
   alarm[6] = other.alarm[6]
   if bigbloon &gt; 2 {
   shell = other.shell;
   }
   move = other.move
   ds_list_copy(hits, other.hits);
   bloonmaxlayer = other.bloonmaxlayer;
   bloonlayer = other.bloonlayer;
   move_towards_point(other.target_x, other.target_y, 8);
   path_position = other.path_position;
   }
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-200</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>round(4 / attackrate)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if chargepower &gt; 0
if charge &lt; 32
charge += 0.2

target = noone;
with Camo
if other.camodetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Normal
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Shield
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Lead
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
{

if ninjapower &gt; 0
with instance_create(x, y, Sun_Star)
{
move_towards_point(other.target.x, other.target.y, 30);
target = other.target
LP = 6 * other.ninjapower;
PP = 10 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[2] = round(4/other.attackrate)
}

if chargepower &gt; 0
{
if charge &gt;= 1
with instance_create(x, y, Sun_Charge)
{
move_towards_point(other.target.x, other.target.y, 30);
LP = 10 * other.chargepower;
PP = 10 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[2] = round(4/other.attackrate)
other.charge -= 1
}
}

}
if object_exists(Bloon)
if dartlingpower &gt; 0
with instance_create(x, y, Dartling_Sun)
{
LP = 9 * other.dartlingpower;
PP = 7 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[2] = round(4/other.attackrate)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-200</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>round(4 / attackrate)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = noone;
with Camo
if other.camodetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Normal
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Shield
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Lead
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
{

if dartpower &gt; 0
with instance_create(x, y, Sun_Dart)
{
move_towards_point(other.target.x, other.target.y, 27);
LP = 12 * other.dartpower;
PP = 6 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[1] = round(12/other.attackrate)
}

if helipower &gt; 0
{
with instance_create(x, y, Sun_Heli_1)
{
move_towards_point(other.target.x, other.target.y, 27);
LP = 7 * other.helipower;
PP = 8 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 27;
alarm[0] = range;
other.alarm[1] = round(12/other.attackrate)
}
with instance_create(x, y, Sun_Heli_2)
{
move_towards_point(other.target.x, other.target.y, 27);
LP = 7 * other.helipower;
PP = 8 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 27;
alarm[0] = range;
other.alarm[1] = round(12/other.attackrate)
}
}

if rangpower &gt; 0
with instance_create(x, y, Sun_Rang)
{
move_towards_point(other.target.x, other.target.y, 30);
target = other.target
LP = 6 * other.ninjapower;
PP = 60 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 19;
direction -= 15;
alarm[1] = range;
other.alarm[1] = round(12/other.attackrate)
}

if bombpower &gt; 0
with instance_create(x, y, Sun_Bomb)
{
move_towards_point(other.target.x, other.target.y, 24);
LP = 5 * other.bombpower;
PP = 100 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[1] = round(12/other.attackrate)
}

if subpower &gt; 0
with instance_create(x, y, Sun_Sub_Dart)
{
move_towards_point(other.target.x, other.target.y, 21);
target = other.target
LP = 9 * other.subpower;
PP = 3 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
other.alarm[1] = round(12/other.attackrate)
}



}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-200</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>round(2 / attackrate)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = noone;
with Camo
if other.camodetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Normal
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Shield
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Lead
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
{

with instance_create(x, y, Sun_Shot)
{
move_towards_point(other.target.x, other.target.y, 33);
image_xscale = 2;
image_yscale = 2;
LP = 10 + other.superpower * 2;
PP = 25 + other.ppbuff;
leadpop = other.leaddetect;
camopop = other.camodetect;
range = 30;
alarm[0] = range;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-200</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if select = 1
if global.up = 1
if global.money &gt;= 600000
{
with instance_change(Sun_God,1)
{
dartpower = other.dartpower
tackpower = other.tackpower
snipepower = other.snipepower
rangpower = other.rangpower
ninjapower = other.ninjapower
bombpower = other.bombpower
subpower = other.subpower
chargepower = other.chargepower
gluepower = other.gluepower
icepower = other.icepower
buccpower = other.buccpower
engineerpower = other.engineerpower
acepower = other.acepower
chipperpower = other.chipperpower
apprenticepower = other.apprenticepower
alchemistpower = other.alchemistpower
dartlingpower = other.dartlingpower
mortarpower = other.mortarpower
spactorypower = other.spactorypower
helipower = other.helipower
plasmapower = other.plasmapower
superpower = other.superpower
farmpower = other.farmpower
villagepower = other.villagepower
}
global.upgradeselect = 0;
with(Upgrade_Sign)
{
instance_destroy()
}
global.money -= 600000;
global.up = 0;
}
else
{
global.up = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = noone;
with Camo
if other.camodetect = 1
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Normal
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Shield
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
with Lead
if other.target == noone || path_position &gt; other.target.path_position
if collision_circle(other.x, other.y, other.range, id, true, false)
other.target = id;
if target != noone
if (distance_to_object(Bloon)&lt;range)
{
image_angle = (point_direction(x,y,other.target.x,other.target.y));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Block">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="Monkey">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (SMFC_Aficionado)
{
{ if distance_to_object(other)&lt;=180
other.dartpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Dart_Tank)
{ if distance_to_object(other)&lt;=180
{
other.dartpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Juggernaut)
{ if distance_to_object(other)&lt;=180
{
other.dartpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Turbo_Charge)
{ if distance_to_object(other)&lt;=180
{
other.rangpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Glaive_Lord)
{ if distance_to_object(other)&lt;=180
{
other.rangpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Megarang_Toss)
{ if distance_to_object(other)&lt;=180
{
other.rangpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Mass_Distraction)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
instance_destroy()
other.camodetect = 1
instance_create(x-16,y-16,Block) }}
with (Ninja_God)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
instance_destroy()
other.camodetect = 1
instance_create(x-16,y-16,Block) }}
with (Crouching_Monkey)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
instance_destroy()
other.camodetect = 1
instance_create(x-16,y-16,Block) }}

with (Tack_Typhoon)
{ if distance_to_object(other)&lt;=180
{
other.tackpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Ring_of_Fire)
{ if distance_to_object(other)&lt;=180
{
other.tackpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Blade_Maelstrom)
{ if distance_to_object(other)&lt;=180
{
other.tackpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (RPG_Strike)
{ if distance_to_object(other)&lt;=180
{
other.snipepower += 1
other.alarm[4] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}
with (Moab_Crippler)
{ if distance_to_object(other)&lt;=180
{
other.snipepower += 1
other.alarm[4] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}
with (Supply_Drones)
{ if distance_to_object(other)&lt;=180
{
other.snipepower += 1
other.alarm[4] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}

with (Moab_Assassin_Cannon)
{ if distance_to_object(other)&lt;=180
{
other.bombpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Explosion_King)
{ if distance_to_object(other)&lt;=180
{
other.bombpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (MOAP_Cannon)
{ if distance_to_object(other)&lt;=180
{
other.bombpower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Mass_Distraction)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
other.camodetect = 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Ninja_God)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
other.camodetect = 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Hidden_Monkey)
{ if distance_to_object(other)&lt;=180
{
other.ninjapower += 1
other.alarm[2] = 24
other.camodetect = 1
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Blockade_Sub)
{ if distance_to_object(other)&lt;=180
{
other.subpower += 1
other.alarm[1] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}
with (Anti_Matter_Reactor)
{ if distance_to_object(other)&lt;=180
{
other.subpower += 1
other.alarm[1] = 24
instance_destroy()
other.range += 10
other.camodetect = 1
instance_create(x-16,y-16,Block) }}
with (First_Strike_Sub)
{ if distance_to_object(other)&lt;=180
{
other.subpower += 1
other.alarm[1] = 24
instance_destroy()
other.range += 10
instance_create(x-16,y-16,Block) }}

with (Charge_Overload)
{ if distance_to_object(other)&lt;=180
{
other.chargepower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Gravity_Bomb_Charger)
{ if distance_to_object(other)&lt;=180
{
other.chargepower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Lightning_Bomb)
{ if distance_to_object(other)&lt;=180
{
other.chargepower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Glue_Striker)
{ if distance_to_object(other)&lt;=180
{
other.gluepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Moab_Poison)
{ if distance_to_object(other)&lt;=180
{
other.gluepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Propeller_Glue)
{ if distance_to_object(other)&lt;=180
{
other.gluepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Freezerburn_Cannon_XL)
{ if distance_to_object(other)&lt;=180
{
other.icepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Absolute_Zero)
{ if distance_to_object(other)&lt;=180
{
other.icepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Ice_Storm)
{ if distance_to_object(other)&lt;=180
{
other.icepower += 1
other.alarm[8] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Aircraft_Carrier)
{ if distance_to_object(other)&lt;=180
{
other.buccpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Pirate_Captain_Ship)
{ if distance_to_object(other)&lt;=180
{
other.buccpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (MOAB_Takedown)
{ if distance_to_object(other)&lt;=180
{
other.buccpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Grid_Lock)
{ if distance_to_object(other)&lt;=180
{
other.engineerpower += 1
other.alarm[5] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Omega_Tech)
{ if distance_to_object(other)&lt;=180
{
other.engineerpower += 1
other.alarm[5] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Bloon_Containment_Unit)
{ if distance_to_object(other)&lt;=180
{
other.engineerpower += 1
other.alarm[5] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Hanger_5L)
{ if distance_to_object(other)&lt;=180
{
other.acepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Hanger_5M)
{ if distance_to_object(other)&lt;=180
{
other.acepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Hanger_5R)
{ if distance_to_object(other)&lt;=180
{
other.acepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Vampire_Blender)
{ if distance_to_object(other)&lt;=180
{
other.chipperpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Super_Wide_Funnel)
{ if distance_to_object(other)&lt;=180
{
other.chipperpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Supa_Vac)
{ if distance_to_object(other)&lt;=180
{
other.chipperpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Fire_God)
{ if distance_to_object(other)&lt;=180
{
other.apprenticepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Dark_God)
{ if distance_to_object(other)&lt;=180
{
other.apprenticepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Wind_God)
{ if distance_to_object(other)&lt;=180
{
other.apprenticepower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Diamond_Alchemist)
{ if distance_to_object(other)&lt;=180
{
other.alchemistpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Chemical_Engineer)
{ if distance_to_object(other)&lt;=180
{
other.alchemistpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Amplifier)
{ if distance_to_object(other)&lt;=180
{
other.alchemistpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Nuke_Strike)
{ if distance_to_object(other)&lt;=180
{
other.mortarpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Ion_Cannon)
{ if distance_to_object(other)&lt;=180
{
other.mortarpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Pop_and_Awe)
{ if distance_to_object(other)&lt;=180
{
other.mortarpower += 1
other.alarm[3] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Golden_Barrage)
{ if distance_to_object(other)&lt;=180
{
other.dartlingpower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Hyper_Ultra_Beam)
{ if distance_to_object(other)&lt;=180
{
other.dartlingpower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Bloon_Area_Denial_System)
{ if distance_to_object(other)&lt;=180
{
other.dartlingpower += 1
other.alarm[2] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Spike_Wall)
{ if distance_to_object(other)&lt;=180
{
other.spactorypower += 1
other.alarm[6] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Nebula)
{ if distance_to_object(other)&lt;=180
{
other.spactorypower += 1
other.alarm[6] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Spike_Storm)
{ if distance_to_object(other)&lt;=180
{
other.spactorypower += 1
other.alarm[6] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (AHanger_5L)
if distance_to_object(other)&lt;=180
{
other.helipower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block)
}
with (AHanger_5M)
if distance_to_object(other)&lt;=180
{
other.helipower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block)
}
with (AHanger_5R)
if distance_to_object(other)&lt;=180
{
other.helipower += 1
other.alarm[1] = 24
instance_destroy()
instance_create(x-16,y-16,Block)
}

with (Moab_Drain)
{ if distance_to_object(other)&lt;=180
{
other.plasmapower += 1
other.alarm[7] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Omega_Rays)
{ if distance_to_object(other)&lt;=180
{
other.plasmapower += 1
other.alarm[7] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Red_Shift)
{ if distance_to_object(other)&lt;=180
{
other.plasmapower += 1
other.alarm[7] = 24
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Call_to_Arms)
{ if distance_to_object(other)&lt;=180
{
other.villagepower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Monkey_Metropolis)
{ if distance_to_object(other)&lt;=180
{
other.villagepower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Monkey_Energizer)
{ if distance_to_object(other)&lt;=180
{
other.villagepower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Golden_Fruit)
{ if distance_to_object(other)&lt;=180
{
other.farmpower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Banana_Replicator)
{ if distance_to_object(other)&lt;=180
{
other.farmpower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}
with (Insurance_Fraud)
{ if distance_to_object(other)&lt;=180
{
other.farmpower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}

with (Sun_Worshipper)
{ if distance_to_object(other)&lt;=180
{
other.superpower += 1
instance_destroy()
instance_create(x-16,y-16,Block) }}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_towernot()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.SuMM &gt;= 3
if global.upgradeselect = 0
{
if select = 0
{
global.tower = 24.42;
global.upgradeselect = 1;
select = 1;
instance_create(x-16,y-16,Upgrade_Sign)
}
else
{
global.upgradeselect = 1;
select = 0;
with(Upgrade_Sign)
{
instance_destroy();
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.tower = 24.42
select = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
